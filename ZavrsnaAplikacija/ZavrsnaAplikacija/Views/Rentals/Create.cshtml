@model ZavrsnaAplikacija.Models.Rental

@{
    ViewBag.Title = "Create";
}

<h2 class="my-2">Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Rental</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CarId, "CarId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CarId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CarId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateRented, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateRented,
                new
                     {
                         htmlAttributes = new
                         {
                             @class = "form-control date-picker",
                         }
                     })
                @Html.ValidationMessageFor(model => model.DateRented, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateReturned, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateReturned, new { htmlAttributes = new { @class = "form-control date-picker" } })
                @Html.ValidationMessageFor(model => model.DateReturned, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default btn-outline-success my-3" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*@Scripts.Render("~/Scripts/jquery-ui-1.13.2.min.js")
    @Scripts.Render("~/Scripts/jquery-3.4.1.min.js")*@

<script src="~/scripts/jquery-3.4.1.min.js"></script>
<script src="~/scripts/jquery-ui-1.13.2.min.js"></script>
<link href="~/content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<script>
    $(function () {
        $('.date-picker').datepicker({
            dateFormat: 'yy-mm-dd',
            changeMonth: true,
            changeYear: true,
        //    maxDate: 'now'
        });
    });
    //var $j = jquery.noconflict();
    //$j('.date-picker').datepicker();
</script>
}
